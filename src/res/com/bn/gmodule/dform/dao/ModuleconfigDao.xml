<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bn.gmodule.dform.dao.ModuleconfigDao">

    <!-- 返回数据类型(PO)数据对象 -->
    <sql id="resultModuleconfigObj">
        select
        a.module_code "moduleCode",
        a.template_code "templateCode",
        b.template_name "templateName",
        a.module_name "moduleName",
        a.module_desc "moduleDesc",
        a.module_cat "moduleCat",
        c.type_name "typeName",
        a.config_param "configParam",
        a.ver "ver",
        a.is_used "isUsed",
        a.create_by "createBy",
        d.user_name "createByName",
        a.create_time "createTime",
        a.modify_by "modifyBy",
        e.user_name "modifyByName",
        a.modify_time "modifyTime"
    </sql>

    <!-- 分页获取数据 -->
    <select id="findPage" parameterType="com.bn.javax.dao.Page" resultType="com.bn.gmodule.dform.po.ModuleconfigPo">
        <include refid="resultModuleconfigObj"/>
        from info_module_config a
        left join info_app_template b on a.template_code = b.template_code
        left join code_ge_multilevel c on a.module_cat = c.type_id
        left join sys_user d on a.create_by = d.user_id
        left join sys_user e on a.modify_by = e.user_id
        <where>
            <if test="params.bo.keyWord != null and params.bo.keyWord != ''">
                (
                a.module_code like '%${params.bo.keyWord}%'
                or
                a.module_name like '%${params.bo.keyWord}%'
                )and
            </if>
            <if test="params.bo.templateCode != null and params.bo.templateCode != ''">
                a.template_code = '${params.bo.templateCode}' and
            </if>
            <if test="params.bo.moduleCat != null and params.bo.moduleCat != ''">
                a.module_cat = '${params.bo.moduleCat}' and
            </if>
            c.info_type = '1002'
        </where>
        <if test="params.bo.sort != null and params.bo.sort != ''">
            order by ${params.bo.sort}
            <if test="params.bo.order != null and params.bo.order != ''">
                ${params.bo.order}
            </if>
        </if>
        <!-- 设置默认排序 -->
        <if test="params.bo.order == null or params.bo.order == ''">
            order by a.module_code
        </if>
    </select>

    <!-- 查询所有数据 -->
    <select id="findAll" resultType="com.bn.gmodule.dform.po.ModuleconfigPo">
        <include refid="resultModuleconfigObj"/>
        from info_module_config a
        left join info_app_template b on a.template_code = b.template_code
        left join code_ge_multilevel c on a.module_cat = c.type_id
        left join sys_user d on a.create_by = d.user_id
        left join sys_user e on a.modify_by = e.user_id
        where c.info_type = '1002'
    </select>

    <!-- 根据主键获取数据 -->
    <select id="findById" parameterType="String" resultType="com.bn.gmodule.dform.po.ModuleconfigPo">
        <include refid="resultModuleconfigObj"/>
        from info_module_config a
        left join info_app_template b on a.template_code = b.template_code
        left join code_ge_multilevel c on a.module_cat = c.type_id
        left join sys_user d on a.create_by = d.user_id
        left join sys_user e on a.modify_by = e.user_id
        where a.module_code = #{moduleCode}
        and c.info_type = '1002'
    </select>

    <!-- 查询出最大的版本号 -->
    <select id="findMaxVer" resultType="Integer">
        select Max(ver)
        from info_module_config
    </select>

    <!-- 新增数据 -->
    <insert id="addModule" parameterType="com.bn.gmodule.dform.bo.ModuleconfigBo">
        insert into info_module_config
        (
        module_code,
        template_code,
        module_name,
        module_desc,
        module_cat,
        config_param,
        ver,
        is_used,
        create_by,
        create_time,
        modify_by,
        modify_time
        )
        values
        (
        #{moduleCode},
        #{templateCode},
        #{moduleName},
        #{moduleDesc},
        #{moduleCat},
        #{configParam},
        #{ver},
        #{isUsed},
        #{createBy},
        str_to_date(#{createTime},'%Y-%m-%d %T'),
        #{modifyBy},
        str_to_date(#{modifyTime},'%Y-%m-%d %T')
        )
    </insert>

    <!-- 修改数据 -->
    <update id="modifyModule" parameterType="com.bn.gmodule.dform.bo.ModuleconfigBo">
        update info_module_config
        set
        template_code = #{templateCode},
        module_name = #{moduleName},
        module_desc = #{moduleDesc},
        module_cat = #{moduleCat},
        config_param = #{configParam},
        ver = #{ver},
        is_used = #{isUsed},
        modify_by = #{modifyBy},
        modify_time = str_to_date(#{modifyTime},'%Y-%m-%d %T')
        where module_code = #{moduleCode}
    </update>

    <!-- 删除数据 -->
    <delete id="removeModule" parameterType="String">
        delete from info_module_config
        where module_code = #{moduleCode}
    </delete>

    <!-- 验证名称是否存在 -->
    <select id="validateModuleName" parameterType="com.bn.gmodule.dform.bo.ModuleconfigBo" resultType="Integer">
        select count(*)
        from info_module_config
        where module_name = #{moduleName}
    </select>

</mapper>